Given an array of integers cost[] of length N, where cost[i] is the cost of the ith step on a staircase. Once the cost is paid, you can either climb one or two steps. You can either start from the step with index 0, or the step with index 1. Return the minimum cost to reach the top of the floor.

Example 1:
Input:
N = 3
cost[] = {10, 15, 20}
Output: 15
Explanation: Cheapest option is to start at cost[1], pay that cost, and go to the top.

CODE:


class Solution
{
    static int minCostClimbingStairs(int[] h , int n) 
    {
        int x=h[0],y=h[1];
        
        for(int i=2;i<n;i++)
        {
            int k=Math.min(x+h[i],y+h[i]);
            x=y;
            y=k;
        }
        return Math.min(x,y);
    }
}
