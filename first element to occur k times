Given an array of N integers. Find the first element that occurs at least K number of times.
Example 1:
Input :
N = 7, K = 2
A[] = {1, 7, 4, 3, 4, 8, 7}
Output : 4
Explanation:
Both 7 and 4 occur 2 times. But 4 is first that occurs 2 times As at index = 4, 4 has occurred atleast 2 times whereas at index = 6,7 has occurred atleast 2 times.

CODE:

//{ Driver Code Starts
import java.util.*;
import java.io.*;
import java.lang.*;

public class GfG { 
	public static void main (String[] args) throws IOException  {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine().trim());
		while(t-->0){
		    String inputLine[] = br.readLine().trim().split(" ");
		    int n = Integer.parseInt(inputLine[0]);
		    int m = Integer.parseInt(inputLine[1]);
		    int[] arr = new int[n];
		    inputLine = br.readLine().trim().split(" ");
		    for(int i=0; i<n; i++)arr[i] = Integer.parseInt(inputLine[i]);
		    
		    Solution obj = new Solution();
		    System.out.println(obj.firstElementKTime(arr, n, m));
		}
	}
}

// } Driver Code Ends


class Solution
{
    public int firstElementKTime(int[] a, int n, int k) 
    { 
        HashMap<Integer, Integer> map=new HashMap<>();
        
        for(int i=0;i<n;i++)
        {
            //System.out.print(a[i]);
            if(map.containsKey(a[i]))
            {
                map.put(a[i],map.get(a[i])+1);
                 //System.out.println(map.get(a[i]));
            }
            else
            {
                map.put(a[i],1);
            }
            
            if(map.get(a[i])==k)
                {
                    int count=a[i];
                    return count;
                }
              
        }
        return -1;
    } 
}
