Given string S representing a postfix expression, the task is to evaluate the expression and find the final value. Operators will only include the basic arithmetic operators like *, /, + and -.

Example 1:
Input: S = "231*+9-"
Output: -4
Explanation: After solving the given expression, we have -4 as result.

CODE:

//{ Driver Code Starts
import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
    
	public static void main (String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine().trim());
		while(t-->0){
		    System.out.println(new Solution().evaluatePostFix(br.readLine().trim()));
		}
	}
}
// } Driver Code Ends


class Solution
{
    //Function to evaluate a postfix expression.
    public static int evaluatePostFix(String s)
    {
        // Your code here
        Stack<Integer>st=new Stack<>();
        
        for(int i=0; i<s.length(); i++)
        {
            if(Character.isDigit(s.charAt(i)))
            {
                int temp=Character.getNumericValue(s.charAt(i));
                st.push(temp);
            }

            else
            {
                int a=st.pop();
                int b=st.pop();
                Character op=s.charAt(i);

                switch(op)
                {
                    case '+':
                        st.push(b+a);
                        break;

                    case '-':
                        st.push(b-a);
                        break;

                    case '*':
                        st.push(a*b);
                        break;

                    case '/':
                        st.push(b/a);
                        break;
                }
            }
        }

        return st.pop();
    }
}
